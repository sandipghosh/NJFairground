@model NJFairground.Web.Models.PageModel
<div class="row">
    <div class="col-lg-12">
        @using (Ajax.BeginForm("Edit", "PageList", new AjaxOptions
        {
            HttpMethod = "POST",
            OnBegin = "FormBeginSend",
            OnSuccess = "ShowPageScreen",
            OnComplete = "FormCompleteSend"
        },
        new { role = "form", enctype = "multipart/form-data" }))
        {
            <div class="form-horizontal">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary btn-sm" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-sm" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Image</label>
                    <div class="col-md-10">
                        <div id="dvPreview">
                            <img src="@Model.PageImageUrl" width="200" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2"></label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PageImage, new { htmlAttributes = new { type = "file" } })
                        @Html.ValidationMessageFor(model => model.PageImage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Name</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PageName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PageName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Description</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PageDesc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PageDesc, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Content</label>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.PageContent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PageContent, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary btn-sm" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default btn-sm" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.PageId)
                @Html.HiddenFor(model => model.StatusId)
            </div>
        }
    </div>
</div>